// <auto-generated />
using CityInfoAPI.Models.DatabaseSessionConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfoAPI.Migrations
{
    [DbContext(typeof(CityDbContext))]
    [Migration("20231003124559_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("CityInfoAPI.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "5.biggest city",
                            Name = "Kristiansand"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Capital of Norway",
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Turgut and Marinda's city",
                            Name = "Boston"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The most rainy city",
                            Name = "Bergen"
                        });
                });

            modelBuilder.Entity("CityInfoAPI.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Central Church in Kristiansand",
                            Name = "Dom Kirke"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Central Place in Kristiansand",
                            Name = "Centrum"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Oldest and fameous museum in Oslo",
                            Name = "Viking Museum"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Best khebab in Oslo",
                            Name = "Istanbul Khebab"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Best University in the world",
                            Name = "Harvard University"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Central Park in Boston",
                            Name = "Central Park"
                        });
                });

            modelBuilder.Entity("CityInfoAPI.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfoAPI.Entities.City", "City")
                        .WithMany("PointsOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfoAPI.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
